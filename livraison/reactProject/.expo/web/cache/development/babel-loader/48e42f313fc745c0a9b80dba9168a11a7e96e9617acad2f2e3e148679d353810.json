{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { useState } from \"react\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Switch from \"react-native-web/dist/exports/Switch\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport colors from \"../Style/Colors\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nexport default function TodoItem(props) {\n  var _useState = useState(props.item.done),\n    _useState2 = _slicedToArray(_useState, 2),\n    done = _useState2[0],\n    setDone = _useState2[1];\n  React.useEffect(function () {\n    setDone(props.item.done);\n  }, [props.item.done]);\n  return _jsxs(View, {\n    style: styles.content,\n    children: [_jsx(Switch, {\n      value: done,\n      onValueChange: function onValueChange(state) {\n        setDone(state);\n        props.updateItem(props.item.id, state);\n      }\n    }), _jsx(Text, {\n      style: [styles.text_item, {\n        textDecorationLine: done ? \"line-through\" : \"none\"\n      }],\n      children: props.item.content\n    }), _jsx(TouchableOpacity, {\n      onPress: function onPress() {\n        return props.deleteTodo(props.item.id);\n      },\n      children: _jsx(Image, {\n        source: require(\"../assets/poubelle.png\"),\n        style: {\n          height: 24,\n          width: 24,\n          tintColor: colors.bodyText\n        }\n      })\n    })]\n  });\n}\nvar styles = StyleSheet.create({\n  content: {\n    flexDirection: \"row\",\n    margin: 5,\n    width: \"100%\"\n  },\n  text_item: {\n    marginLeft: 10,\n    width: 150\n  }\n});","map":{"version":3,"names":["React","useState","Image","View","Text","StyleSheet","Switch","TouchableOpacity","colors","jsx","_jsx","jsxs","_jsxs","TodoItem","props","_useState","item","done","_useState2","_slicedToArray","setDone","useEffect","style","styles","content","children","value","onValueChange","state","updateItem","id","text_item","textDecorationLine","onPress","deleteTodo","source","require","height","width","tintColor","bodyText","create","flexDirection","margin","marginLeft"],"sources":["/home/kabar231/Documents/kabar-mansous-react/reactProject/components/TodoItem.js"],"sourcesContent":["import React, { useState } from \"react\";\nimport {\n  Image,\n  View,\n  Text,\n  StyleSheet,\n  Switch,\n  TouchableOpacity,\n} from \"react-native\";\nimport colors from \"../Style/Colors\";\nexport default function TodoItem(props) {\n  const [done, setDone] = useState(props.item.done);\n  React.useEffect(() => {\n    setDone(props.item.done);\n  }, [props.item.done]);\n\n  return (\n    <View style={styles.content}>\n      <Switch\n        value={done}\n        onValueChange={(state) => {\n          setDone(state);\n          props.updateItem(props.item.id, state);\n        }}\n      />\n      <Text\n        style={[\n          styles.text_item,\n          { textDecorationLine: done ? \"line-through\" : \"none\" },\n        ]}\n      >\n        {props.item.content}\n      </Text>\n      <TouchableOpacity onPress={() => props.deleteTodo(props.item.id)}>\n        <Image\n          source={require(\"../assets/poubelle.png\")}\n          style={{ height: 24, width: 24, tintColor: colors.bodyText }}\n        />\n      </TouchableOpacity>\n    </View>\n  );\n}\n\nconst styles = StyleSheet.create({\n  content: {\n    flexDirection: \"row\",\n    margin : 5,\n    width: \"100%\",\n  },\n  text_item: {\n    marginLeft: 10,\n    width: 150,\n  },\n});\n"],"mappings":";AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AAAC,OAAAC,KAAA;AAAA,OAAAC,IAAA;AAAA,OAAAC,IAAA;AAAA,OAAAC,UAAA;AAAA,OAAAC,MAAA;AAAA,OAAAC,gBAAA;AASxC,OAAOC,MAAM;AAAwB,SAAAC,GAAA,IAAAC,IAAA;AAAA,SAAAC,IAAA,IAAAC,KAAA;AACrC,eAAe,SAASC,QAAQA,CAACC,KAAK,EAAE;EACtC,IAAAC,SAAA,GAAwBd,QAAQ,CAACa,KAAK,CAACE,IAAI,CAACC,IAAI,CAAC;IAAAC,UAAA,GAAAC,cAAA,CAAAJ,SAAA;IAA1CE,IAAI,GAAAC,UAAA;IAAEE,OAAO,GAAAF,UAAA;EACpBlB,KAAK,CAACqB,SAAS,CAAC,YAAM;IACpBD,OAAO,CAACN,KAAK,CAACE,IAAI,CAACC,IAAI,CAAC;EAC1B,CAAC,EAAE,CAACH,KAAK,CAACE,IAAI,CAACC,IAAI,CAAC,CAAC;EAErB,OACEL,KAAA,CAACT,IAAI;IAACmB,KAAK,EAAEC,MAAM,CAACC,OAAQ;IAAAC,QAAA,GAC1Bf,IAAA,CAACJ,MAAM;MACLoB,KAAK,EAAET,IAAK;MACZU,aAAa,EAAE,SAAAA,cAACC,KAAK,EAAK;QACxBR,OAAO,CAACQ,KAAK,CAAC;QACdd,KAAK,CAACe,UAAU,CAACf,KAAK,CAACE,IAAI,CAACc,EAAE,EAAEF,KAAK,CAAC;MACxC;IAAE,CACH,CAAC,EACFlB,IAAA,CAACN,IAAI;MACHkB,KAAK,EAAE,CACLC,MAAM,CAACQ,SAAS,EAChB;QAAEC,kBAAkB,EAAEf,IAAI,GAAG,cAAc,GAAG;MAAO,CAAC,CACtD;MAAAQ,QAAA,EAEDX,KAAK,CAACE,IAAI,CAACQ;IAAO,CACf,CAAC,EACPd,IAAA,CAACH,gBAAgB;MAAC0B,OAAO,EAAE,SAAAA,QAAA;QAAA,OAAMnB,KAAK,CAACoB,UAAU,CAACpB,KAAK,CAACE,IAAI,CAACc,EAAE,CAAC;MAAA,CAAC;MAAAL,QAAA,EAC/Df,IAAA,CAACR,KAAK;QACJiC,MAAM,EAAEC,OAAO,yBAAyB,CAAE;QAC1Cd,KAAK,EAAE;UAAEe,MAAM,EAAE,EAAE;UAAEC,KAAK,EAAE,EAAE;UAAEC,SAAS,EAAE/B,MAAM,CAACgC;QAAS;MAAE,CAC9D;IAAC,CACc,CAAC;EAAA,CACf,CAAC;AAEX;AAEA,IAAMjB,MAAM,GAAGlB,UAAU,CAACoC,MAAM,CAAC;EAC/BjB,OAAO,EAAE;IACPkB,aAAa,EAAE,KAAK;IACpBC,MAAM,EAAG,CAAC;IACVL,KAAK,EAAE;EACT,CAAC;EACDP,SAAS,EAAE;IACTa,UAAU,EAAE,EAAE;IACdN,KAAK,EAAE;EACT;AACF,CAAC,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}