{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { useState, useContext } from \"react\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport View from \"react-native-web/dist/exports/View\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport { createTodoList } from \"../../Helpers/CreateTodoList\";\nimport pageStyle from \"../../Style/PagesStyle\";\nimport colors from \"../../Style/Colors\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nexport default function Input(props) {\n  var _useState = useState(\"\"),\n    _useState2 = _slicedToArray(_useState, 2),\n    title = _useState2[0],\n    setTitle = _useState2[1];\n  var createTodoLists = function createTodoLists() {\n    if (title === \"\") {\n      props.setMessage(\"Titre vide\");\n      return;\n    }\n    var input = [{\n      owner: {\n        connect: {\n          where: {\n            username: props.username\n          }\n        }\n      },\n      title: title\n    }];\n    createTodoList(input, props.token).then(function (resulat) {\n      props.setMessage(\"Ajout d'une liste\");\n      setTitle(\"\");\n      props.refrech();\n    }).catch(function (err) {\n      props.setMessage(err.message);\n    });\n  };\n  return _jsxs(View, {\n    style: pageStyle.todoListsPage,\n    children: [_jsx(Text, {\n      style: pageStyle.defaultText,\n      children: \"Add a new todo list\"\n    }), _jsx(TextInput, {\n      style: pageStyle.inputStyle,\n      placeholder: \"Title\",\n      onChangeText: function onChangeText(text) {\n        return setTitle(text);\n      },\n      value: title\n    }), _jsx(Button, {\n      color: colors.buttons,\n      title: \"Add a new todo list\",\n      onPress: function onPress() {\n        createTodoLists();\n      }\n    })]\n  });\n}","map":{"version":3,"names":["React","useState","useContext","StyleSheet","View","TextInput","Button","Text","createTodoList","pageStyle","colors","jsx","_jsx","jsxs","_jsxs","Input","props","_useState","_useState2","_slicedToArray","title","setTitle","createTodoLists","setMessage","input","owner","connect","where","username","token","then","resulat","refrech","catch","err","message","style","todoListsPage","children","defaultText","inputStyle","placeholder","onChangeText","text","value","color","buttons","onPress"],"sources":["/home/kabar231/Documents/kabar-mansous-react/reactProject/components/UI/Input.js"],"sourcesContent":["import React, { useState, useContext } from \"react\";\nimport { StyleSheet, View, TextInput, Button, Text } from \"react-native\";\nimport { createTodoList } from \"../../Helpers/CreateTodoList\";\nimport pageStyle from \"../../Style/PagesStyle\";\nimport colors from \"../../Style/Colors\";\nexport default function Input(props) {\n  const [title, setTitle] = useState(\"\");\n\n  const createTodoLists = () => {\n    if (title === \"\") {\n      props.setMessage(\"Titre vide\");\n      return;\n    }\n\n    const input = [\n      {\n        owner: {\n          connect: {\n            where: {\n              username: props.username,\n            },\n          },\n        },\n        title: title,\n      },\n    ];\n\n    createTodoList(input, props.token)\n      .then((resulat) => {\n        props.setMessage(\"Ajout d'une liste\");\n        setTitle(\"\");\n        props.refrech();\n      })\n      .catch((err) => {\n        props.setMessage(err.message);\n      });\n  };\n  return (\n    <View style={pageStyle.todoListsPage}>\n      <Text style={pageStyle.defaultText}>Add a new todo list</Text>\n      <TextInput\n        style={pageStyle.inputStyle}\n        placeholder=\"Title\"\n        onChangeText={(text) => setTitle(text)}\n        value={title}\n      />\n      <Button\n        color={colors.buttons}\n        title=\"Add a new todo list\"\n        onPress={() => {\n          createTodoLists();\n        }}\n      />\n    </View>\n  );\n}\n"],"mappings":";AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,UAAU,QAAQ,OAAO;AAAC,OAAAC,UAAA;AAAA,OAAAC,IAAA;AAAA,OAAAC,SAAA;AAAA,OAAAC,MAAA;AAAA,OAAAC,IAAA;AAEpD,SAASC,cAAc;AACvB,OAAOC,SAAS;AAChB,OAAOC,MAAM;AAA2B,SAAAC,GAAA,IAAAC,IAAA;AAAA,SAAAC,IAAA,IAAAC,KAAA;AACxC,eAAe,SAASC,KAAKA,CAACC,KAAK,EAAE;EACnC,IAAAC,SAAA,GAA0BhB,QAAQ,CAAC,EAAE,CAAC;IAAAiB,UAAA,GAAAC,cAAA,CAAAF,SAAA;IAA/BG,KAAK,GAAAF,UAAA;IAAEG,QAAQ,GAAAH,UAAA;EAEtB,IAAMI,eAAe,GAAG,SAAlBA,eAAeA,CAAA,EAAS;IAC5B,IAAIF,KAAK,KAAK,EAAE,EAAE;MAChBJ,KAAK,CAACO,UAAU,CAAC,YAAY,CAAC;MAC9B;IACF;IAEA,IAAMC,KAAK,GAAG,CACZ;MACEC,KAAK,EAAE;QACLC,OAAO,EAAE;UACPC,KAAK,EAAE;YACLC,QAAQ,EAAEZ,KAAK,CAACY;UAClB;QACF;MACF,CAAC;MACDR,KAAK,EAAEA;IACT,CAAC,CACF;IAEDZ,cAAc,CAACgB,KAAK,EAAER,KAAK,CAACa,KAAK,CAAC,CAC/BC,IAAI,CAAC,UAACC,OAAO,EAAK;MACjBf,KAAK,CAACO,UAAU,CAAC,mBAAmB,CAAC;MACrCF,QAAQ,CAAC,EAAE,CAAC;MACZL,KAAK,CAACgB,OAAO,CAAC,CAAC;IACjB,CAAC,CAAC,CACDC,KAAK,CAAC,UAACC,GAAG,EAAK;MACdlB,KAAK,CAACO,UAAU,CAACW,GAAG,CAACC,OAAO,CAAC;IAC/B,CAAC,CAAC;EACN,CAAC;EACD,OACErB,KAAA,CAACV,IAAI;IAACgC,KAAK,EAAE3B,SAAS,CAAC4B,aAAc;IAAAC,QAAA,GACnC1B,IAAA,CAACL,IAAI;MAAC6B,KAAK,EAAE3B,SAAS,CAAC8B,WAAY;MAAAD,QAAA,EAAC;IAAmB,CAAM,CAAC,EAC9D1B,IAAA,CAACP,SAAS;MACR+B,KAAK,EAAE3B,SAAS,CAAC+B,UAAW;MAC5BC,WAAW,EAAC,OAAO;MACnBC,YAAY,EAAE,SAAAA,aAACC,IAAI;QAAA,OAAKtB,QAAQ,CAACsB,IAAI,CAAC;MAAA,CAAC;MACvCC,KAAK,EAAExB;IAAM,CACd,CAAC,EACFR,IAAA,CAACN,MAAM;MACLuC,KAAK,EAAEnC,MAAM,CAACoC,OAAQ;MACtB1B,KAAK,EAAC,qBAAqB;MAC3B2B,OAAO,EAAE,SAAAA,QAAA,EAAM;QACbzB,eAAe,CAAC,CAAC;MACnB;IAAE,CACH,CAAC;EAAA,CACE,CAAC;AAEX"},"metadata":{},"sourceType":"module","externalDependencies":[]}