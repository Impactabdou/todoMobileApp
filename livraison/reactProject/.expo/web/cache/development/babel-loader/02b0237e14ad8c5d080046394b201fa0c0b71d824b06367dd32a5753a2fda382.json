{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { useContext, useState, useEffect } from \"react\";\nimport { UsernameContext, TokenContext } from \"../Context/Context\";\nimport FlatList from \"react-native-web/dist/exports/FlatList\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport { getTodoLists } from \"../Helpers/TodoLists\";\nimport Input from \"../components/UI/Input\";\nimport TodoLists from \"../components/todoLists\";\nimport { deleteTodoList } from \"../Helpers/DeleteTodoList\";\nimport pageStyle from \"../Style/PagesStyle\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nfunction TaskListsScreen(_ref) {\n  var navigation = _ref.navigation;\n  var _useContext = useContext(TokenContext),\n    _useContext2 = _slicedToArray(_useContext, 2),\n    token = _useContext2[0],\n    setToken = _useContext2[1];\n  var _useContext3 = useContext(UsernameContext),\n    _useContext4 = _slicedToArray(_useContext3, 2),\n    username = _useContext4[0],\n    setUsername = _useContext4[1];\n  var _useState = useState(Array),\n    _useState2 = _slicedToArray(_useState, 2),\n    dataList = _useState2[0],\n    setDataList = _useState2[1];\n  var _useState3 = useState(0),\n    _useState4 = _slicedToArray(_useState3, 2),\n    initialeLoad = _useState4[0],\n    setInitialLoad = _useState4[1];\n  var _useState5 = useState(\"\"),\n    _useState6 = _slicedToArray(_useState5, 2),\n    message = _useState6[0],\n    setMessage = _useState6[1];\n  useEffect(function () {\n    if (initialeLoad === 0) {\n      setInitialLoad(initialeLoad + 1);\n      setMessage(\"Initial load\");\n      refrech();\n    }\n  }, [dataList, initialeLoad]);\n  function refrech() {\n    getTodoLists(username, token).then(function (data) {\n      setTimeout(function () {\n        setMessage(\"\");\n      }, 1000);\n      setDataList(data);\n    }).catch(function (err) {\n      setMessage(err.message);\n    });\n  }\n  var deleteTodoLists = function deleteTodoLists(id) {\n    deleteTodoList(id, token).then(function () {\n      setMessage(\"Todo list delted\");\n      refrech();\n    }).catch(function (err) {\n      return setMessage(err.message);\n    });\n  };\n  var getDetails = function getDetails(id) {\n    navigation.navigate(\"Details\", {\n      listID: id\n    });\n  };\n  return _jsxs(View, {\n    style: pageStyle.loginPage,\n    children: [_jsxs(View, {\n      children: [_jsxs(Text, {\n        style: pageStyle.defaultText,\n        children: [\"List count : \", dataList.length, \" \"]\n      }), _jsx(Input, {\n        username: username,\n        token: token,\n        refrech: refrech,\n        setMessage: setMessage\n      }), _jsx(Text, {\n        style: pageStyle.feedbackText,\n        children: message\n      })]\n    }), _jsx(View, {\n      style: pageStyle.todoListsContainer,\n      children: _jsx(FlatList, {\n        data: dataList,\n        renderItem: function renderItem(_ref2) {\n          var item = _ref2.item;\n          return _jsx(TodoLists, {\n            item: item,\n            deleteTodoLists: deleteTodoLists,\n            getDetails: getDetails\n          });\n        },\n        keyExtractor: function keyExtractor(item) {\n          return item.id;\n        },\n        horizontal: false\n      })\n    })]\n  });\n}\nexport default TaskListsScreen;","map":{"version":3,"names":["React","useContext","useState","useEffect","UsernameContext","TokenContext","FlatList","View","Text","StyleSheet","getTodoLists","Input","TodoLists","deleteTodoList","pageStyle","jsxs","_jsxs","jsx","_jsx","TaskListsScreen","_ref","navigation","_useContext","_useContext2","_slicedToArray","token","setToken","_useContext3","_useContext4","username","setUsername","_useState","Array","_useState2","dataList","setDataList","_useState3","_useState4","initialeLoad","setInitialLoad","_useState5","_useState6","message","setMessage","refrech","then","data","setTimeout","catch","err","deleteTodoLists","id","getDetails","navigate","listID","style","loginPage","children","defaultText","length","feedbackText","todoListsContainer","renderItem","_ref2","item","keyExtractor","horizontal"],"sources":["/home/kabar231/Documents/kabar-mansous-react/reactProject/Screen/TodoListsScreen.js"],"sourcesContent":["import React, { useContext, useState, useEffect } from \"react\";\nimport { UsernameContext, TokenContext } from \"../Context/Context\";\nimport { FlatList, View, Text, StyleSheet } from \"react-native-web\";\nimport { getTodoLists } from \"../Helpers/TodoLists\";\nimport Input from \"../components/UI/Input\";\nimport TodoLists from \"../components/todoLists\";\nimport { deleteTodoList } from \"../Helpers/DeleteTodoList\";\nimport pageStyle from \"../Style/PagesStyle\";\n\nfunction TaskListsScreen({ navigation }) {\n//setting up all variables\n  const [token, setToken] = useContext(TokenContext);\n  const [username, setUsername] = useContext(UsernameContext);\n  const [dataList, setDataList] = useState(Array);\n  const [initialeLoad, setInitialLoad] = useState(0);\n  const [message, setMessage] = useState(\"\");\n// use effect to fetch the the todolists data\n  useEffect(() => {\n    if (initialeLoad === 0) {\n      setInitialLoad(initialeLoad + 1);\n      setMessage(\"Initial load\");\n      refrech();\n    }\n  }, [dataList, initialeLoad]);\n// function that fetches all the todolists data\n  function refrech() {\n    getTodoLists(username, token)\n      .then((data) => {\n        setTimeout(() => {\n          setMessage(\"\");\n        }, 1000);\n        setDataList(data);\n      })\n      .catch((err) => {\n        setMessage(err.message);\n      });\n  }\n// function that runs a mutation on the sever to delete the todolist\n  const deleteTodoLists = (id) => {\n    deleteTodoList(id, token)\n      .then(() => {\n        setMessage(\"Todo list delted\");\n        refrech();\n      })\n      .catch((err) => setMessage(err.message));\n  };\n//function that permits to navigate to the selected todolist\n  const getDetails = (id) => {\n    navigation.navigate(\"Details\", { listID: id });\n  };\n//rendering UI\n  return (\n    <View style={pageStyle.loginPage}>\n      <View>\n        <Text style={pageStyle.defaultText}>\n          List count : {dataList.length}{\" \"}\n        </Text>\n        <Input\n          username={username}\n          token={token}\n          refrech={refrech}\n          setMessage={setMessage}\n        ></Input>\n        <Text style={pageStyle.feedbackText}>{message}</Text>\n      </View>\n      <View style={pageStyle.todoListsContainer}>\n        <FlatList\n          data={dataList}\n          renderItem={({ item }) => (\n            <TodoLists\n              item={item}\n              deleteTodoLists={deleteTodoLists}\n              getDetails={getDetails}\n            />\n          )}\n          keyExtractor={(item) => item.id}\n          horizontal={false}\n        />\n      </View>\n    </View>\n  );\n}\n\nexport default TaskListsScreen;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}