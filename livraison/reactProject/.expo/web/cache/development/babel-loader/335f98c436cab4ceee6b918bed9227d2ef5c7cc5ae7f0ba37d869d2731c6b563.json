{"ast":null,"code":"import _asyncToGenerator from \"@babel/runtime/helpers/asyncToGenerator\";\nvar API_URL = 'http://graphql.unicaen.fr:4000';\nvar ADD_TODO = `\nmutation Mutation($input: [TodoCreateInput!]!) {\n    createTodos(input: $input) {\n      todos {\n        id\n      }\n    }\n  }`;\nexport function addTodoItem(_x, _x2, _x3) {\n  return _addTodoItem.apply(this, arguments);\n}\nfunction _addTodoItem() {\n  _addTodoItem = _asyncToGenerator(function* (id, content, token) {\n    try {\n      var response = yield fetch(API_URL, {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n          'Authorization': 'Bearer ' + token\n        },\n        body: JSON.stringify({\n          query: ADD_TODO,\n          variables: {\n            input: {\n              belongsTo: {\n                connect: {\n                  where: {\n                    id: id\n                  }\n                }\n              },\n              content: content,\n              done: false\n            }\n          }\n        })\n      });\n      var jsonResponse = yield response.json();\n      if (jsonResponse.errors != null) {\n        throw jsonResponse.errors[0];\n      }\n      return jsonResponse.data.createTodos;\n    } catch (error) {\n      throw error;\n    }\n  });\n  return _addTodoItem.apply(this, arguments);\n}","map":{"version":3,"names":["API_URL","ADD_TODO","addTodoItem","_x","_x2","_x3","_addTodoItem","apply","arguments","_asyncToGenerator","id","content","token","response","fetch","method","headers","body","JSON","stringify","query","variables","input","belongsTo","connect","where","done","jsonResponse","json","errors","data","createTodos","error"],"sources":["/home/kabar231/Documents/Kabar-Mansous/reactProject/Helpers/addTodoItem.js"],"sourcesContent":["//mutation for creating the todo item\nconst API_URL = 'http://graphql.unicaen.fr:4000'\nconst ADD_TODO = `\nmutation Mutation($input: [TodoCreateInput!]!) {\n    createTodos(input: $input) {\n      todos {\n        id\n      }\n    }\n  }`\n\n\n\nexport async function addTodoItem(id,content,token) {\n    \n    try {\n        const response = await fetch(API_URL, {\n            method: 'POST',\n            headers: {\n                'Content-Type': 'application/json',\n                'Authorization' : 'Bearer ' + token\n            },\n            body: JSON.stringify({\n                query: ADD_TODO,\n                variables: {\n                    input : {\n                        belongsTo: {\n                          connect: {\n                            where: {\n                              id: id\n                            }\n                          }\n                        },\n                        content: content,\n                        done: false\n                      }\n                }\n            })\n        })\n        const jsonResponse = await response.json()\n        if (jsonResponse.errors != null) {\n            throw jsonResponse.errors[0]\n        }\n        return jsonResponse.data.createTodos\n    } catch (error) {\n        throw error\n    }\n  }"],"mappings":";AACA,IAAMA,OAAO,GAAG,gCAAgC;AAChD,IAAMC,QAAQ,GAAI;AAClB;AACA;AACA;AACA;AACA;AACA;AACA,IAAI;AAIJ,gBAAsBC,WAAWA,CAAAC,EAAA,EAAAC,GAAA,EAAAC,GAAA;EAAA,OAAAC,YAAA,CAAAC,KAAA,OAAAC,SAAA;AAAA;AAkC9B,SAAAF,aAAA;EAAAA,YAAA,GAAAG,iBAAA,CAlCI,WAA2BC,EAAE,EAACC,OAAO,EAACC,KAAK,EAAE;IAEhD,IAAI;MACA,IAAMC,QAAQ,SAASC,KAAK,CAACd,OAAO,EAAE;QAClCe,MAAM,EAAE,MAAM;QACdC,OAAO,EAAE;UACL,cAAc,EAAE,kBAAkB;UAClC,eAAe,EAAG,SAAS,GAAGJ;QAClC,CAAC;QACDK,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;UACjBC,KAAK,EAAEnB,QAAQ;UACfoB,SAAS,EAAE;YACPC,KAAK,EAAG;cACJC,SAAS,EAAE;gBACTC,OAAO,EAAE;kBACPC,KAAK,EAAE;oBACLf,EAAE,EAAEA;kBACN;gBACF;cACF,CAAC;cACDC,OAAO,EAAEA,OAAO;cAChBe,IAAI,EAAE;YACR;UACN;QACJ,CAAC;MACL,CAAC,CAAC;MACF,IAAMC,YAAY,SAASd,QAAQ,CAACe,IAAI,CAAC,CAAC;MAC1C,IAAID,YAAY,CAACE,MAAM,IAAI,IAAI,EAAE;QAC7B,MAAMF,YAAY,CAACE,MAAM,CAAC,CAAC,CAAC;MAChC;MACA,OAAOF,YAAY,CAACG,IAAI,CAACC,WAAW;IACxC,CAAC,CAAC,OAAOC,KAAK,EAAE;MACZ,MAAMA,KAAK;IACf;EACF,CAAC;EAAA,OAAA1B,YAAA,CAAAC,KAAA,OAAAC,SAAA;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}