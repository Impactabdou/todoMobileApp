{"ast":null,"code":"import _asyncToGenerator from \"@babel/runtime/helpers/asyncToGenerator\";\nvar API_URL = 'http://graphql.unicaen.fr:4000';\nvar TODOS_LISTS = `\nquery TodoLists($where: TodoListWhere) {\n    todoLists(where: $where) {\n      id\n      title\n    }\n  }`;\nexport function getTodoLists(_x, _x2) {\n  return _getTodoLists.apply(this, arguments);\n}\nfunction _getTodoLists() {\n  _getTodoLists = _asyncToGenerator(function* (username, token) {\n    try {\n      var response = yield fetch(API_URL, {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n          'Authorization': 'Bearer ' + token\n        },\n        body: JSON.stringify({\n          query: TODOS_LISTS,\n          variables: {\n            where: {\n              owner: {\n                username: username\n              }\n            }\n          }\n        })\n      });\n      var jsonResponse = yield response.json();\n      if (jsonResponse.errors != null) {\n        throw jsonResponse.errors[0];\n      }\n      return jsonResponse.data.todoLists;\n    } catch (error) {\n      throw error;\n    }\n  });\n  return _getTodoLists.apply(this, arguments);\n}","map":{"version":3,"names":["API_URL","TODOS_LISTS","getTodoLists","_x","_x2","_getTodoLists","apply","arguments","_asyncToGenerator","username","token","response","fetch","method","headers","body","JSON","stringify","query","variables","where","owner","jsonResponse","json","errors","data","todoLists","error"],"sources":["/home/kabar231/Documents/kabar-mansous-react/reactProject/Helpers/TodoLists.js"],"sourcesContent":["//query to get the todo lists\nconst API_URL = 'http://graphql.unicaen.fr:4000'\nconst TODOS_LISTS= `\nquery TodoLists($where: TodoListWhere) {\n    todoLists(where: $where) {\n      id\n      title\n    }\n  }`\n\nexport async function getTodoLists(username, token) {\n\n    try {\n        const response = await fetch(API_URL, {\n            method: 'POST',\n            headers: {\n                'Content-Type': 'application/json',\n                'Authorization' : 'Bearer ' + token\n            },\n            body: JSON.stringify({\n                query: TODOS_LISTS,\n                variables: {\n                    where : {\n                        owner: {\n                          username: username\n                        }\n                      }\n                }\n            })\n        })\n        const jsonResponse = await response.json()\n        if (jsonResponse.errors != null){\n            throw jsonResponse.errors[0]\n        }\n        return jsonResponse.data.todoLists\n    } catch (error) {\n        throw error\n    }\n  }"],"mappings":";AACA,IAAMA,OAAO,GAAG,gCAAgC;AAChD,IAAMC,WAAW,GAAG;AACpB;AACA;AACA;AACA;AACA;AACA,IAAI;AAEJ,gBAAsBC,YAAYA,CAAAC,EAAA,EAAAC,GAAA;EAAA,OAAAC,aAAA,CAAAC,KAAA,OAAAC,SAAA;AAAA;AA4B/B,SAAAF,cAAA;EAAAA,aAAA,GAAAG,iBAAA,CA5BI,WAA4BC,QAAQ,EAAEC,KAAK,EAAE;IAEhD,IAAI;MACA,IAAMC,QAAQ,SAASC,KAAK,CAACZ,OAAO,EAAE;QAClCa,MAAM,EAAE,MAAM;QACdC,OAAO,EAAE;UACL,cAAc,EAAE,kBAAkB;UAClC,eAAe,EAAG,SAAS,GAAGJ;QAClC,CAAC;QACDK,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;UACjBC,KAAK,EAAEjB,WAAW;UAClBkB,SAAS,EAAE;YACPC,KAAK,EAAG;cACJC,KAAK,EAAE;gBACLZ,QAAQ,EAAEA;cACZ;YACF;UACN;QACJ,CAAC;MACL,CAAC,CAAC;MACF,IAAMa,YAAY,SAASX,QAAQ,CAACY,IAAI,CAAC,CAAC;MAC1C,IAAID,YAAY,CAACE,MAAM,IAAI,IAAI,EAAC;QAC5B,MAAMF,YAAY,CAACE,MAAM,CAAC,CAAC,CAAC;MAChC;MACA,OAAOF,YAAY,CAACG,IAAI,CAACC,SAAS;IACtC,CAAC,CAAC,OAAOC,KAAK,EAAE;MACZ,MAAMA,KAAK;IACf;EACF,CAAC;EAAA,OAAAtB,aAAA,CAAAC,KAAA,OAAAC,SAAA;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}