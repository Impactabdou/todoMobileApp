{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { useContext, useState } from \"react\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport { TokenContext, UsernameContext } from \"../Context/Context\";\nimport { signUp } from \"../Helpers/SignUp\";\nimport pageStyle from \"../Style/PagesStyle\";\nimport colors from \"../Style/Colors\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nfunction SignUpScreen(_ref) {\n  var navigation = _ref.navigation;\n  var _useState = useState(\"\"),\n    _useState2 = _slicedToArray(_useState, 2),\n    login = _useState2[0],\n    setLogin = _useState2[1];\n  var _useState3 = useState(\"\"),\n    _useState4 = _slicedToArray(_useState3, 2),\n    password = _useState4[0],\n    setPassword = _useState4[1];\n  var _useContext = useContext(TokenContext),\n    _useContext2 = _slicedToArray(_useContext, 2),\n    token = _useContext2[0],\n    setToken = _useContext2[1];\n  var _useContext3 = useContext(UsernameContext),\n    _useContext4 = _slicedToArray(_useContext3, 2),\n    user = _useContext4[0],\n    setUser = _useContext4[1];\n  var _useContext5 = useContext(TokenContext),\n    _useContext6 = _slicedToArray(_useContext5, 2),\n    userId = _useContext6[0],\n    setUserId = _useContext6[1];\n  var _useState5 = useState(\"\"),\n    _useState6 = _slicedToArray(_useState5, 2),\n    error = _useState6[0],\n    setError = _useState6[1];\n  var minLength = 8;\n  var onSubmit = function onSubmit() {\n    if (login === \"\") {\n      setError(\"Empty username\");\n      return;\n    }\n    if (password.length < minLength) {\n      setError(\"Password must be at least 8 characters long\");\n      return;\n    }\n    signUp(login, password).then(function (token) {\n      setError(\"\");\n      setToken(token);\n      setUser(login);\n      navigation.navigate(\"Home\");\n    }).catch(function (err) {\n      setError(err.message);\n    });\n  };\n  return _jsx(TokenContext.Consumer, {\n    children: function children(_ref2) {\n      var _ref3 = _slicedToArray(_ref2, 2),\n        token = _ref3[0],\n        setToken = _ref3[1];\n      return _jsx(UsernameContext.Consumer, {\n        children: function children(_ref4) {\n          var _ref5 = _slicedToArray(_ref4, 2),\n            username = _ref5[0],\n            setUsername = _ref5[1];\n          return _jsxs(View, {\n            style: pageStyle.loginPage,\n            children: [_jsx(Image, {\n              style: pageStyle.sginInImage,\n              source: require(\"../assets/add-user.png\")\n            }), _jsxs(View, {\n              children: [_jsxs(Text, {\n                style: pageStyle.textSignIn,\n                children: [\"page de cr\\xE9ation de compte:\", \" \"]\n              }), _jsx(View, {\n                children: _jsx(TextInput, {\n                  style: pageStyle.inputStyle,\n                  placeholder: \"Username\",\n                  onChangeText: function onChangeText(text) {\n                    return setLogin(text);\n                  },\n                  value: login\n                })\n              }), _jsx(View, {\n                children: _jsx(TextInput, {\n                  style: pageStyle.inputStyle,\n                  placeholder: \"Password\",\n                  onChangeText: function onChangeText(text) {\n                    return setPassword(text);\n                  },\n                  secureTextEntry: true,\n                  value: password\n                })\n              })]\n            }), _jsxs(View, {\n              style: pageStyle.buttonLogin,\n              children: [_jsx(Button, {\n                color: colors.buttons,\n                title: \"Sign up\",\n                onPress: onSubmit\n              }), _jsx(Text, {\n                style: {\n                  color: \"red\",\n                  margin: \"10px\"\n                },\n                children: error\n              })]\n            })]\n          });\n        }\n      });\n    }\n  });\n}\nexport default SignUpScreen;","map":{"version":3,"names":["React","useContext","useState","TextInput","Button","View","Text","Image","TokenContext","UsernameContext","signUp","pageStyle","colors","jsx","_jsx","jsxs","_jsxs","SignUpScreen","_ref","navigation","_useState","_useState2","_slicedToArray","login","setLogin","_useState3","_useState4","password","setPassword","_useContext","_useContext2","token","setToken","_useContext3","_useContext4","user","setUser","_useContext5","_useContext6","userId","setUserId","_useState5","_useState6","error","setError","minLength","onSubmit","length","then","navigate","catch","err","message","Consumer","children","_ref2","_ref3","_ref4","_ref5","username","setUsername","style","loginPage","sginInImage","source","require","textSignIn","inputStyle","placeholder","onChangeText","text","value","secureTextEntry","buttonLogin","color","buttons","title","onPress","margin"],"sources":["/home/kabar231/Documents/kabar-mansous-react/reactProject/Screen/SignUpScreen.js"],"sourcesContent":["import React, { useContext, useState } from \"react\";\nimport {\n  TextInput,\n  Button,\n  View,\n  Text,\n  Image,\n} from \"react-native-web\";\nimport { TokenContext, UsernameContext } from \"../Context/Context\";\nimport { signUp } from \"../Helpers/SignUp\";\nimport pageStyle from \"../Style/PagesStyle\";\nimport colors from \"../Style/Colors\";\n//function that runders the sign up screen\nfunction SignUpScreen({ navigation }) {\n  const [login, setLogin] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [token, setToken] = useContext(TokenContext);\n  const [user, setUser] = useContext(UsernameContext);\n  const [userId, setUserId] = useContext(TokenContext);\n  const [error, setError] = useState(\"\");\n  const minLength = 8;\n//function that generated the token/user from the server and sets it with the token context/ user context\n  const onSubmit = () => {\n    if (login === \"\") {\n      setError(\"Empty username\");\n      return;\n    }\n    if (password.length < minLength) {\n      setError(\"Password must be at least 8 characters long\");\n      return;\n    }\n    signUp(login, password)\n      .then((token) => {\n        setError(\"\");\n        setToken(token);\n        setUser(login);\n        navigation.navigate(\"Home\");\n      })\n      .catch((err) => {\n        setError(err.message);\n      });\n  };\n//rendering ui\n  return (\n    <TokenContext.Consumer>\n      {([token, setToken]) => (\n        <UsernameContext.Consumer>\n          {([username, setUsername]) => (\n            <View style={pageStyle.loginPage}>\n              <Image\n                style={pageStyle.sginInImage}\n                source={require(\"../assets/add-user.png\")}\n              />\n              <View>\n                <Text style={pageStyle.textSignIn}>\n                  page de cr√©ation de compte:{\" \"}\n                </Text>\n                <View>\n                  <TextInput\n                    style={pageStyle.inputStyle}\n                    placeholder=\"Username\"\n                    onChangeText={(text) => setLogin(text)}\n                    value={login}\n                  />\n                </View>\n                <View>\n                  <TextInput\n                    style={pageStyle.inputStyle}\n                    placeholder=\"Password\"\n                    onChangeText={(text) => setPassword(text)}\n                    secureTextEntry={true}\n                    value={password}\n                  />\n                </View>\n              </View>\n              <View style={pageStyle.buttonLogin}>\n                <Button\n                  color={colors.buttons}\n                  title=\"Sign up\"\n                  onPress={onSubmit}\n                />\n                <Text style={{ color: \"red\", margin: \"10px\" }}>{error}</Text>\n              </View>\n            </View>\n          )}\n        </UsernameContext.Consumer>\n      )}\n    </TokenContext.Consumer>\n  );\n}\n\nexport default SignUpScreen;\n"],"mappings":";AAAA,OAAOA,KAAK,IAAIC,UAAU,EAAEC,QAAQ,QAAQ,OAAO;AAAC,OAAAC,SAAA;AAAA,OAAAC,MAAA;AAAA,OAAAC,IAAA;AAAA,OAAAC,IAAA;AAAA,OAAAC,KAAA;AAQpD,SAASC,YAAY,EAAEC,eAAe;AACtC,SAASC,MAAM;AACf,OAAOC,SAAS;AAChB,OAAOC,MAAM;AAAwB,SAAAC,GAAA,IAAAC,IAAA;AAAA,SAAAC,IAAA,IAAAC,KAAA;AAErC,SAASC,YAAYA,CAAAC,IAAA,EAAiB;EAAA,IAAdC,UAAU,GAAAD,IAAA,CAAVC,UAAU;EAChC,IAAAC,SAAA,GAA0BlB,QAAQ,CAAC,EAAE,CAAC;IAAAmB,UAAA,GAAAC,cAAA,CAAAF,SAAA;IAA/BG,KAAK,GAAAF,UAAA;IAAEG,QAAQ,GAAAH,UAAA;EACtB,IAAAI,UAAA,GAAgCvB,QAAQ,CAAC,EAAE,CAAC;IAAAwB,UAAA,GAAAJ,cAAA,CAAAG,UAAA;IAArCE,QAAQ,GAAAD,UAAA;IAAEE,WAAW,GAAAF,UAAA;EAC5B,IAAAG,WAAA,GAA0B5B,UAAU,CAACO,YAAY,CAAC;IAAAsB,YAAA,GAAAR,cAAA,CAAAO,WAAA;IAA3CE,KAAK,GAAAD,YAAA;IAAEE,QAAQ,GAAAF,YAAA;EACtB,IAAAG,YAAA,GAAwBhC,UAAU,CAACQ,eAAe,CAAC;IAAAyB,YAAA,GAAAZ,cAAA,CAAAW,YAAA;IAA5CE,IAAI,GAAAD,YAAA;IAAEE,OAAO,GAAAF,YAAA;EACpB,IAAAG,YAAA,GAA4BpC,UAAU,CAACO,YAAY,CAAC;IAAA8B,YAAA,GAAAhB,cAAA,CAAAe,YAAA;IAA7CE,MAAM,GAAAD,YAAA;IAAEE,SAAS,GAAAF,YAAA;EACxB,IAAAG,UAAA,GAA0BvC,QAAQ,CAAC,EAAE,CAAC;IAAAwC,UAAA,GAAApB,cAAA,CAAAmB,UAAA;IAA/BE,KAAK,GAAAD,UAAA;IAAEE,QAAQ,GAAAF,UAAA;EACtB,IAAMG,SAAS,GAAG,CAAC;EAEnB,IAAMC,QAAQ,GAAG,SAAXA,QAAQA,CAAA,EAAS;IACrB,IAAIvB,KAAK,KAAK,EAAE,EAAE;MAChBqB,QAAQ,CAAC,gBAAgB,CAAC;MAC1B;IACF;IACA,IAAIjB,QAAQ,CAACoB,MAAM,GAAGF,SAAS,EAAE;MAC/BD,QAAQ,CAAC,6CAA6C,CAAC;MACvD;IACF;IACAlC,MAAM,CAACa,KAAK,EAAEI,QAAQ,CAAC,CACpBqB,IAAI,CAAC,UAACjB,KAAK,EAAK;MACfa,QAAQ,CAAC,EAAE,CAAC;MACZZ,QAAQ,CAACD,KAAK,CAAC;MACfK,OAAO,CAACb,KAAK,CAAC;MACdJ,UAAU,CAAC8B,QAAQ,CAAC,MAAM,CAAC;IAC7B,CAAC,CAAC,CACDC,KAAK,CAAC,UAACC,GAAG,EAAK;MACdP,QAAQ,CAACO,GAAG,CAACC,OAAO,CAAC;IACvB,CAAC,CAAC;EACN,CAAC;EAED,OACEtC,IAAA,CAACN,YAAY,CAAC6C,QAAQ;IAAAC,QAAA,EACnB,SAAAA,SAAAC,KAAA;MAAA,IAAAC,KAAA,GAAAlC,cAAA,CAAAiC,KAAA;QAAExB,KAAK,GAAAyB,KAAA;QAAExB,QAAQ,GAAAwB,KAAA;MAAA,OAChB1C,IAAA,CAACL,eAAe,CAAC4C,QAAQ;QAAAC,QAAA,EACtB,SAAAA,SAAAG,KAAA;UAAA,IAAAC,KAAA,GAAApC,cAAA,CAAAmC,KAAA;YAAEE,QAAQ,GAAAD,KAAA;YAAEE,WAAW,GAAAF,KAAA;UAAA,OACtB1C,KAAA,CAACX,IAAI;YAACwD,KAAK,EAAElD,SAAS,CAACmD,SAAU;YAAAR,QAAA,GAC/BxC,IAAA,CAACP,KAAK;cACJsD,KAAK,EAAElD,SAAS,CAACoD,WAAY;cAC7BC,MAAM,EAAEC,OAAO,yBAAyB;YAAE,CAC3C,CAAC,EACFjD,KAAA,CAACX,IAAI;cAAAiD,QAAA,GACHtC,KAAA,CAACV,IAAI;gBAACuD,KAAK,EAAElD,SAAS,CAACuD,UAAW;gBAAAZ,QAAA,GAAC,gCACN,EAAC,GAAG;cAAA,CAC3B,CAAC,EACPxC,IAAA,CAACT,IAAI;gBAAAiD,QAAA,EACHxC,IAAA,CAACX,SAAS;kBACR0D,KAAK,EAAElD,SAAS,CAACwD,UAAW;kBAC5BC,WAAW,EAAC,UAAU;kBACtBC,YAAY,EAAE,SAAAA,aAACC,IAAI;oBAAA,OAAK9C,QAAQ,CAAC8C,IAAI,CAAC;kBAAA,CAAC;kBACvCC,KAAK,EAAEhD;gBAAM,CACd;cAAC,CACE,CAAC,EACPT,IAAA,CAACT,IAAI;gBAAAiD,QAAA,EACHxC,IAAA,CAACX,SAAS;kBACR0D,KAAK,EAAElD,SAAS,CAACwD,UAAW;kBAC5BC,WAAW,EAAC,UAAU;kBACtBC,YAAY,EAAE,SAAAA,aAACC,IAAI;oBAAA,OAAK1C,WAAW,CAAC0C,IAAI,CAAC;kBAAA,CAAC;kBAC1CE,eAAe,EAAE,IAAK;kBACtBD,KAAK,EAAE5C;gBAAS,CACjB;cAAC,CACE,CAAC;YAAA,CACH,CAAC,EACPX,KAAA,CAACX,IAAI;cAACwD,KAAK,EAAElD,SAAS,CAAC8D,WAAY;cAAAnB,QAAA,GACjCxC,IAAA,CAACV,MAAM;gBACLsE,KAAK,EAAE9D,MAAM,CAAC+D,OAAQ;gBACtBC,KAAK,EAAC,SAAS;gBACfC,OAAO,EAAE/B;cAAS,CACnB,CAAC,EACFhC,IAAA,CAACR,IAAI;gBAACuD,KAAK,EAAE;kBAAEa,KAAK,EAAE,KAAK;kBAAEI,MAAM,EAAE;gBAAO,CAAE;gBAAAxB,QAAA,EAAEX;cAAK,CAAO,CAAC;YAAA,CACzD,CAAC;UAAA,CACH,CAAC;QAAA;MACR,CACuB,CAAC;IAAA;EAC5B,CACoB,CAAC;AAE5B;AAEA,eAAe1B,YAAY"},"metadata":{},"sourceType":"module","externalDependencies":[]}